cwd?
?
""
cwd()
setwd("../caret_package/")
getwd()
data(AlzheirmerDisease)
data(AlzheimerDisease)
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
AppliedPredictiveModeling?
?
''
?AppliedPredictiveModeling
??AppliedPredictiveModeling
#library(AppliedPredictiveModeling)
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
install.packages('AppliedPredictiveModeling')
install.packages('AppliedPredictiveModeling')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
installed.packages("caret");
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
installed.packages("caret");
install.packages("caret");
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
install.packages(caret);
install.packages("caret
"");
""
install.packages("caret");
library(caret)
install.packages("pbkrtest");
install.packages("caret");
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
install.packages("AppliedPredictiveModeling")
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_one.R')
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_two.R')
summary(concrete)
source('~/Programs/R/datasciencecoursera/machine_learning/caret_package/question_two.R')
training
featurePlot(x=training[,c("Cement","BlastFurnaceSlag","FlyAsh","Water","Superplasticizer","CoarseAggregate","FineAggregate","Age")],
y = training$CompressiveStrength,
plot="pairs")
featurePlot(x=training[,c("Superplasticizer","CoarseAggregate","FineAggregate","Age")],
y = training$CompressiveStrength,
plot="pairs")
featurePlot(x=training[,c("Cement","BlastFurnaceSlag","FlyAsh","Water")],
y = training$CompressiveStrength,
plot="pairs")
training
nrow(mixtures)
seq <- 1:1030
seq
featurePlot(x=seq,
y = training$CompressiveStrength,
plot="pairs")
nrows(training$CompressiveStrength)
nrow(training$CompressiveStrength)
nrow(training)
seq <- 1:nrow(training)
featurePlot(x=seq,
y = training$CompressiveStrength,
plot="pairs")
summmary(mixtures)
summary(mixtures)
training$CompressiveStrength
colnames(mixtures)
